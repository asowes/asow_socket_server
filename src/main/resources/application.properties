# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# PROFILES
spring.profiles.active=dev
#spring.profiles.active=test
#spring.profiles.active=live
server.servlet.context-path = /api
# SPRING CONFIG (ConfigFileApplicationListener)
spring.config.name=application
spring.config.location=/config/

# APPLICATION SETTINGS (SpringApplication)
spring.main.banner-mode=console

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=8181
server.servlet.session.timeout=1800s
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=logs
server.tomcat.max-threads=800
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-connections=20
server.error.whitelabel.enabled=true
server.error.path=/error

# HTTP ENCODING
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

# JDBC DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.platform=postgres
spring.datasource.continueOnError=false
spring.datasource.separator=;
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/asow?characterEncoding=utf8&useSSL=false&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.tomcat.max-active=100
spring.datasource.tomcat.max-idle=8
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.initial-size=10
spring.datasource.tomcat.validation-query=false
spring.datasource.tomcat.test-on-borrow=false
spring.datasource.tomcat.test-on-return=false
#spring.datasource.data=classpath:init.sql
#spring.datasource.initialization-mode=never

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.show-sql=true
spring.jpa.database=mysql
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# init
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.data.jpa.repositories.enabled=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.open-in-view=true

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8


# AOP
spring.aop.auto=true
spring.aop.proxy-target-class=true

# Actuator
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=shutdown,info,health
shutdown.whitelist=127.0.0.1

# Logging
logging.level.org.springframework=info
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security*=INFO
logging.level.org.springframework.http.client.support=INFO
logging.level.org.springframework.web.client=INFO
logging.level.org.springframework.security.oauth2.client=INFO
logging.level.org.springframework.security.web.access=INFO
logging.level.org.springframework.web.filter=INFO
logging.level.org.springframework.security.config.annotation.web=INFO

# file size
spring.servlet.multipart.max-file-size=10240KB
spring.servlet.multipart.max-request-size=10240KB

spring.security.user.name=test
spring.security.user.password=test


spring.batch.job.enabled=false

# socket-io
socketio.host: 127.0.0.1
socketio.port: 9099
# 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
socketio.maxFramePayloadLength: 1048576
# 设置http交互最大内容长度
socketio.maxHttpContentLength: 1048576
# socket连接数大小（如只监听一个端口boss线程组为1即可）
socketio.bossCount: 1
socketio.workCount: 100
socketio.allowCustomRequests: true
# 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间
socketio.upgradeTimeout: 1000000
# Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
socketio.pingTimeout: 6000000
# Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
socketio.pingInterval: 30000